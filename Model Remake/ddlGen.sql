-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-02-08 19:45:50 EST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE client (
    id_client              NUMBER NOT NULL,
    nom_client             VARCHAR2(100) NOT NULL,
    prenom_client          VARCHAR2(150) NOT NULL,
    courriel_client        VARCHAR2(250) NOT NULL,
    mdp_client             VARCHAR2(50) NOT NULL,
    gen_restants           NUMBER NOT NULL,
    sport_id_sport         NUMBER,
    sport_nom_sport        VARCHAR2(50),
    coach_id_coach         NUMBER,
    poste_id_poste         NUMBER,
    programme_id_programme NUMBER,
    diete_id_diet          NUMBER
);

CREATE UNIQUE INDEX client__idx ON
    client (
        programme_id_programme
    ASC );

ALTER TABLE client ADD CONSTRAINT client_pk PRIMARY KEY ( id_client );

CREATE TABLE coach (
    id_coach  NUMBER NOT NULL,
    nom       VARCHAR2(50) NOT NULL,
    typecoach NUMBER NOT NULL
);

ALTER TABLE coach ADD CONSTRAINT coach_pk PRIMARY KEY ( id_coach );

CREATE TABLE diete (
    id_diet   NUMBER NOT NULL,
    calories  NUMBER NOT NULL,
    proteines NUMBER,
    glucides  NUMBER,
    lipides   NCLOB
);

ALTER TABLE diete ADD CONSTRAINT diete_pk PRIMARY KEY ( id_diet );

CREATE TABLE exo (
    id_exo    NUMBER NOT NULL,
    nom_exo   VARCHAR2(200) NOT NULL,
    desc_exo  VARCHAR2(2000),
    image_exo VARCHAR2(2000)
);

ALTER TABLE exo ADD CONSTRAINT exo_pk PRIMARY KEY ( id_exo );

CREATE TABLE exo_exec (
    id_exo_exec        NUMBER NOT NULL,
    workout_id_workout NUMBER NOT NULL
);

ALTER TABLE exo_exec ADD CONSTRAINT exo_exec_pk PRIMARY KEY ( id_exo_exec );

CREATE TABLE poste (
    id_poste  NUMBER NOT NULL,
    nom_poste VARCHAR2(50) NOT NULL
);

ALTER TABLE poste ADD CONSTRAINT poste_pk PRIMARY KEY ( id_poste );

CREATE TABLE prefaits_progs (
    id            NUMBER NOT NULL,
    titre_prefait VARCHAR2(100) NOT NULL,
    desc_prefait  VARCHAR2(2000) NOT NULL
);

ALTER TABLE prefaits_progs ADD CONSTRAINT prefaits_progs_pk PRIMARY KEY ( id );

CREATE TABLE program_exos (
    id_prog_exo            NUMBER NOT NULL,
    exo_id_exo             NUMBER NOT NULL,
    programme_id_programme NUMBER NOT NULL,
    prefaits_progs_id      NUMBER NOT NULL
);

ALTER TABLE program_exos ADD CONSTRAINT program_exos_pk PRIMARY KEY ( id_prog_exo );

CREATE TABLE programme (
    id_programme      NUMBER NOT NULL,
    nom_programme     VARCHAR2(250) NOT NULL,
    client_id_client  NUMBER,
    prefaits_progs_id NUMBER
);

CREATE UNIQUE INDEX programme__idx ON
    programme (
        client_id_client
    ASC );

ALTER TABLE programme ADD CONSTRAINT programme_pk PRIMARY KEY ( id_programme );

CREATE TABLE "set" (
    id_set               NUMBER NOT NULL,
    reps                 NUMBER NOT NULL,
    rpe                  NUMBER,
    exo_exec_id_exo_exec NUMBER NOT NULL,
    exo_id_exo           NUMBER NOT NULL
);

ALTER TABLE "set" ADD CONSTRAINT set_pk PRIMARY KEY ( id_set );

CREATE TABLE sport (
    id_sport  NUMBER NOT NULL,
    nom_sport VARCHAR2(50) NOT NULL
);

ALTER TABLE sport ADD CONSTRAINT sport_pk PRIMARY KEY ( id_sport,
                                                        nom_sport );

CREATE TABLE workout (
    id_workout       NUMBER NOT NULL,
    nom_workout      VARCHAR2(200) NOT NULL,
    desc_workout     VARCHAR2(1500),
    client_id_client NUMBER NOT NULL
);

ALTER TABLE workout ADD CONSTRAINT workout_pk PRIMARY KEY ( id_workout );

ALTER TABLE client
    ADD CONSTRAINT client_coach_fk FOREIGN KEY ( coach_id_coach )
        REFERENCES coach ( id_coach );

ALTER TABLE client
    ADD CONSTRAINT client_diete_fk FOREIGN KEY ( diete_id_diet )
        REFERENCES diete ( id_diet );

ALTER TABLE client
    ADD CONSTRAINT client_poste_fk FOREIGN KEY ( poste_id_poste )
        REFERENCES poste ( id_poste );

ALTER TABLE client
    ADD CONSTRAINT client_programme_fk FOREIGN KEY ( programme_id_programme )
        REFERENCES programme ( id_programme );

ALTER TABLE client
    ADD CONSTRAINT client_sport_fk FOREIGN KEY ( sport_id_sport,
                                                 sport_nom_sport )
        REFERENCES sport ( id_sport,
                           nom_sport );

ALTER TABLE exo_exec
    ADD CONSTRAINT exo_exec_workout_fk FOREIGN KEY ( workout_id_workout )
        REFERENCES workout ( id_workout );

ALTER TABLE program_exos
    ADD CONSTRAINT program_exos_exo_fk FOREIGN KEY ( exo_id_exo )
        REFERENCES exo ( id_exo );

ALTER TABLE program_exos
    ADD CONSTRAINT program_exos_prefaits_progs_fk FOREIGN KEY ( prefaits_progs_id )
        REFERENCES prefaits_progs ( id );

ALTER TABLE program_exos
    ADD CONSTRAINT program_exos_programme_fk FOREIGN KEY ( programme_id_programme )
        REFERENCES programme ( id_programme );

ALTER TABLE programme
    ADD CONSTRAINT programme_client_fk FOREIGN KEY ( client_id_client )
        REFERENCES client ( id_client );

ALTER TABLE programme
    ADD CONSTRAINT programme_prefaits_progs_fk FOREIGN KEY ( prefaits_progs_id )
        REFERENCES prefaits_progs ( id );

ALTER TABLE "set"
    ADD CONSTRAINT set_exo_exec_fk FOREIGN KEY ( exo_exec_id_exo_exec )
        REFERENCES exo_exec ( id_exo_exec );

ALTER TABLE "set"
    ADD CONSTRAINT set_exo_fk FOREIGN KEY ( exo_id_exo )
        REFERENCES exo ( id_exo );

ALTER TABLE workout
    ADD CONSTRAINT workout_client_fk FOREIGN KEY ( client_id_client )
        REFERENCES client ( id_client );

CREATE SEQUENCE client_id_client_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER client_id_client_trg BEFORE
    INSERT ON client
    FOR EACH ROW
    WHEN ( new.id_client IS NULL )
BEGIN
    :new.id_client := client_id_client_seq.nextval;
END;
/

CREATE SEQUENCE coach_id_coach_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER coach_id_coach_trg BEFORE
    INSERT ON coach
    FOR EACH ROW
    WHEN ( new.id_coach IS NULL )
BEGIN
    :new.id_coach := coach_id_coach_seq.nextval;
END;
/

CREATE SEQUENCE diete_id_diet_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER diete_id_diet_trg BEFORE
    INSERT ON diete
    FOR EACH ROW
    WHEN ( new.id_diet IS NULL )
BEGIN
    :new.id_diet := diete_id_diet_seq.nextval;
END;
/

CREATE SEQUENCE exo_id_exo_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER exo_id_exo_trg BEFORE
    INSERT ON exo
    FOR EACH ROW
    WHEN ( new.id_exo IS NULL )
BEGIN
    :new.id_exo := exo_id_exo_seq.nextval;
END;
/

CREATE SEQUENCE exo_exec_id_exo_exec_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER exo_exec_id_exo_exec_trg BEFORE
    INSERT ON exo_exec
    FOR EACH ROW
    WHEN ( new.id_exo_exec IS NULL )
BEGIN
    :new.id_exo_exec := exo_exec_id_exo_exec_seq.nextval;
END;
/

CREATE SEQUENCE poste_id_poste_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER poste_id_poste_trg BEFORE
    INSERT ON poste
    FOR EACH ROW
    WHEN ( new.id_poste IS NULL )
BEGIN
    :new.id_poste := poste_id_poste_seq.nextval;
END;
/

CREATE SEQUENCE prefaits_progs_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER prefaits_progs_id_trg BEFORE
    INSERT ON prefaits_progs
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := prefaits_progs_id_seq.nextval;
END;
/

CREATE SEQUENCE program_exos_id_prog_exo_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER program_exos_id_prog_exo_trg BEFORE
    INSERT ON program_exos
    FOR EACH ROW
    WHEN ( new.id_prog_exo IS NULL )
BEGIN
    :new.id_prog_exo := program_exos_id_prog_exo_seq.nextval;
END;
/

CREATE SEQUENCE programme_id_programme_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER programme_id_programme_trg BEFORE
    INSERT ON programme
    FOR EACH ROW
    WHEN ( new.id_programme IS NULL )
BEGIN
    :new.id_programme := programme_id_programme_seq.nextval;
END;
/

CREATE SEQUENCE set_id_set_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER set_id_set_trg BEFORE
    INSERT ON "set"
    FOR EACH ROW
    WHEN ( new.id_set IS NULL )
BEGIN
    :new.id_set := set_id_set_seq.nextval;
END;
/

CREATE SEQUENCE sport_id_sport_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sport_id_sport_trg BEFORE
    INSERT ON sport
    FOR EACH ROW
    WHEN ( new.id_sport IS NULL )
BEGIN
    :new.id_sport := sport_id_sport_seq.nextval;
END;
/

CREATE SEQUENCE workout_id_workout_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER workout_id_workout_trg BEFORE
    INSERT ON workout
    FOR EACH ROW
    WHEN ( new.id_workout IS NULL )
BEGIN
    :new.id_workout := workout_id_workout_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             2
-- ALTER TABLE                             26
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          12
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         12
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
